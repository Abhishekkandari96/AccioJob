//******************************
Left view of binary tree
Given the root node of a BST, print its left view i.e print all the nodes from top to bottom that will appear while looking the tree from left.

Input Format
The first line contains an integer n, the number of nodes.
The next line inputs the value of n nodes.

Output Format
Print the left view of the tree as a single line of space-separated values.

Example 1
Input

6
1 2 5 3 4 6
Output

1 2 5 3 4 
Explanation

The BST is like :-
     1
      \
       2
        \
         5
        /  \
       3    6
        \
         4  
So,the left view of tree results in 1,2,5,3,4 as the required result. only 6 is not visible from left view
Example 2
Input

3
1 2 3
Output

1 2 3
Explanation

The BST is like :-
       1
         \
           2
             \
              3
So,the left view will have all three nodes.
Constraints:
1 <= n <= 500
-100 <= val[node] <= 100
Topic Tags

//********************************
class Solution
{
	  public static ArrayList<Integer> leftView(Node root)
    {
      // Your code here
   ArrayList<Integer> list=new ArrayList<>();
      if(root==null){
          return list;
      }
      Queue<Node> q=new LinkedList<>();
      q.add(root);
      while(q.size()>0){
        int size= q.size();
          for(int i=0;i<size;i++){
              Node temp=q.remove();
              int val=temp.val;
              if(i==0){
                  list.add(val);
              }
              if(temp.left!=null) q.add(temp.left);
              if(temp.right!=null) q.add(temp.right);
          }
      }
      return list;
    }

    public static void letfView(Node root)
    {
       List<Integer> list=leftView(root);
		for(int i=0;i<list.size();i++){
			System.out.print(list.get(i)+" ");
		}
    }
    
}
