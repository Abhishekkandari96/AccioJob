//************************
Substring With K Unique characters
You are given a string 's'.

You need to print length of longest possible substring that has exactly k unique characters. If there is no such string print -1.

Input Format
First line contains two integers n and k, denoting the length of string and value of k respectively.

Second line contains a string s.

Output Format
Print an integer indicating the length of substring. If not possible print -1.

Example 1
Input

6 1
aabbcc
Output

2
Explanation

Max substring can be any one from {“aa” , “bb” , “cc”}.
Example 2
Input

6 2
aabbcc
Output

4
Explanation

Max substring can be any one from {“aabb” , “bbcc”}
Constraints
1<=|s|<=10^5
1<=k<=10^5

Topic Tags
//**********************

import java.util.*;

public class Main {

    public static int longestkSubstr(int n, int k,String str){
		int i=0;
		int j=0;
		HashMap<Character,Integer> hm=new HashMap<>();
		int maxSize=-1;
		while( j<str.length()){
		        int val=hm.getOrDefault(str.charAt(j),0);
		        hm.put(str.charAt(j),val+1);
		  
		  while(hm.size()>k){
		        int current_val=hm.get(str.charAt(i));
				hm.put(str.charAt(i), current_val-1);
			  if(hm.get(str.charAt(i))==0){
				  hm.remove(str.charAt(i));
			  }
		        i++;
		    }
			 if(hm.size()==k){
				 maxSize=Math.max(maxSize,j-i+1);
			 }
		        j++;
		}
		return maxSize;
    }

    public static void main(String[] args) throws Throwable {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        String s = sc.next();
        int ans = longestkSubstr(n,k,s);
        System.out.println(ans);
    }
}

