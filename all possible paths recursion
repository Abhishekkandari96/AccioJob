/*
All Possible Paths
Doraemon, with his friends, has reached an unknown destination using his anywhere door. Now he wants to get back to his home, but the anywhere door isn't working correctly, i.e., it cannot directly take him back to his house. In order to reach home, he needs to go to different locations in between.

These locations are numbered from 0 to n - 1 and are represented as a 0-indexed array of integers of length n where indices are the location numbers with the 0th location being "Doraemon" and (n - 1)th location being "Home."

Each element in the array represents the maximum distance the anywhere door can take them from that index 'i'. In other words, if Doraemon is at arr[i], he can reach to any arr[i + j] where:

0 <= j <= arr[i] and i + j < n

Help Doraemon reach his home. Print all possible ways to reach his home. In other words, print all possible paths from the 0th index to (n - 1)th index.

Note

You need to print the output in a specific way. You can see the example test cases for better understanding.

If there are no possible ways, you don't need to print anything.

Input Format
The first line contains N, the size of array A.

The second line contains N space-separated integers, the elements of array A.

Output Format
Print all possible paths.

Example 1
Input

5
2 3 1 1 4
Output

0 -> 1 -> 2 -> 3 -> 4
0 -> 1 -> 3 -> 4
0 -> 1 -> 4
0 -> 2 -> 3 -> 4
Explanation

From the 0th index, he can go to the 1st index as well as the 2nd index because the max distance from the 0th index is 2, which is represented by arr[0].
Similarly, from the 1st index, he can go to the 2nd index, 3rd index, and 4th index because the max distance from the 1st index is 3, which is represented by arr[1].
Example 2
Input

5
2 3 1 0 4
Output

0 -> 1 -> 4
Explanation

There is only one possible way from the 0th index to the 4th index, which is through the 1st index.
Constraints
1 <= N <= 10

0 <= arr[i] <= 10
*/

//*********************************************************************************************************************************************************************8

//all possible paths-https://course.acciojob.com/idle?question=8016f249-87ab-49f9-9c5a-b1b330732651
import java.io.*;
import java.util.*;
class Main{
	public static void main (String[] args) {
		Scanner sc=new Scanner(System.in);
        int n;
        n=sc.nextInt();
        int[] a= new int[n];
        for(int i=0;i<n;i++){
          a[i] = sc.nextInt();
        }
        Solution obj=new Solution();
        obj.allpossiblepaths(0,a,n);		    
    }
}

class Solution
{
	public void  paths(int i,int[] arr,int n,String str){

		if(i==n-1){
			System.out.println(str);
			return;
		}
		//kaam
		for(int j=1;j<=arr[i]&& i+j<n;j++){
			int numb=i+j;
			paths(i+j,arr,n,str+" -> "+numb);
		}
		
	}
    public void allpossiblepaths(int i,int[] arr,int n) {
        paths(i,arr,n,"0");
    }
}
